# First, stop all running processes
pm2 delete all
killall -9 node

# Create a new SQL script with the complete schema
cat > /tmp/complete_schema.sql << EOF
-- Drop and recreate the schema
DROP SCHEMA IF EXISTS public CASCADE;
CREATE SCHEMA public;

-- Grant necessary permissions
GRANT ALL ON SCHEMA public TO neondb_owner;
GRANT ALL ON SCHEMA public TO public;

-- Create the campaigns table with ALL needed columns
CREATE TABLE campaigns (
    id SERIAL PRIMARY KEY,
    name TEXT NOT NULL,
    custom_path TEXT,
    redirect_method TEXT DEFAULT 'http_307',
    use_trafficstar BOOLEAN DEFAULT false,
    trafficstar_campaign_id INTEGER,
    multiplier NUMERIC DEFAULT 1.0,
    price_per_1000 NUMERIC DEFAULT 0.0,
    price_per_thousand NUMERIC DEFAULT 0.0, -- Added both price column formats
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW(),
    is_active BOOLEAN DEFAULT true,
    budget_update_time TEXT,
    min_pause_click_threshold INTEGER DEFAULT 5000,
    min_activate_click_threshold INTEGER DEFAULT 15000,
    high_spend_min_pause_click_threshold INTEGER DEFAULT 1000,
    high_spend_min_activate_click_threshold INTEGER DEFAULT 5000,
    high_spend_pause_threshold INTEGER DEFAULT 1000,
    high_spend_activate_threshold INTEGER DEFAULT 5000,
    pending_budget_update BOOLEAN DEFAULT false,
    traffic_sender_enabled BOOLEAN DEFAULT true
);

-- Create needed tables for the rest of the application
CREATE TABLE urls (
    id SERIAL PRIMARY KEY,
    campaign_id INTEGER NOT NULL,
    name TEXT NOT NULL,
    click_limit INTEGER DEFAULT 0,
    clicks INTEGER DEFAULT 0,
    status TEXT DEFAULT 'active',
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW(),
    multiplier NUMERIC DEFAULT 1.0,
    original_click_value INTEGER DEFAULT 0
);

-- Create foreign key relationships
ALTER TABLE urls ADD CONSTRAINT urls_campaign_id_fkey FOREIGN KEY (campaign_id) REFERENCES campaigns (id);

-- Create any needed indexes
CREATE INDEX urls_campaign_id_idx ON urls (campaign_id);
CREATE INDEX urls_status_idx ON urls (status);

-- Now insert the campaigns
INSERT INTO campaigns (id, name, custom_path, redirect_method, use_trafficstar, trafficstar_campaign_id, multiplier, price_per_1000, price_per_thousand, created_at, updated_at, is_active, min_pause_click_threshold, min_activate_click_threshold, high_spend_min_pause_click_threshold, high_spend_min_activate_click_threshold)
VALUES 
(1, 'Traffic1', 'traffic1', 'http_307', true, 1016596, 4.3, 0.101, 0.101, NOW(), NOW(), true, 5000, 15000, 1000, 5000),
(5, 'Campaign 5', 'campaign5', 'http_307', true, 1000866, 4.3, 0.1, 0.1, NOW(), NOW(), true, 5000, 15000, 1000, 5000);

-- Set the sequence to continue after our manual inserts
SELECT setval('campaigns_id_seq', 5, true);
EOF

# Execute the SQL script
PGPASSWORD=npg_U8evoXZz0WOB psql -U neondb_owner -h 78.46.85.93 -p 5432 -d neondb < /tmp/complete_schema.sql